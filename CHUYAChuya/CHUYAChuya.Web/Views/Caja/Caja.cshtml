@using CHUYAChuya.Web.Models;
@using CHUYAChuya.EntidadesNegocio;

@{
    Layout = null;
}

<div class="col-lg-11 col-lg-offset-0-5">
    @*<div class="row color19">*@
    <h3 class="text-center">MOVIMIENTO DE CAJA</h3>
    <input id="hdnEstado" type="hidden" style="display: block;" />

    <div id="target1" class="panel move panel-inverse active">
        <div class="panel-heading"><span class="glyphicon glyphicon-th" aria-hidden="true"></span>Lista de Movimientos de Caja</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-6 ">
                    @if (FrontUser.TienePermiso(RolesPermisos.Caja_Apertura_de_Caja))
                    {
                        <input href="#target4" id="btnApertura" type="button" class="btn btn-sm btn-success target" value="Apertura de Caja">
                    }
                    <input href="#target5" id="btnCierreCaja" type="button" class="btn btn-sm btn-success target" value="Cierre de Caja">
                </div>
                <div class="col-lg-6 text-right">

                    @if (FrontUser.TienePermiso(RolesPermisos.Caja_Entrada_Efectivo))
                    {
                        <input href="#target2" id="btnEntEfectivo" type="button" class="btn btn-sm btn-success target" value="Entrada Efectivo">
                    }
                    @if (FrontUser.TienePermiso(RolesPermisos.Caja_Salida_Efectivo))
                    {
                        <input href="#target3" id="btnSalEfectivo" type="button" class="btn btn-sm btn-danger target" value="Salida Efectivo">
                    }
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="row m-b-10 m-t-10">
                <div class="col-sm-5">
                    <div class="form-inline">
                        <div class="form-group">
                            <input type="text" id="txtValor" class="form-control" placeholder="Buscar Movimientos">
                        </div>
                        <input id="btnBuscarMov" type="button" value="Buscar" class="btn btn-sm btn-primary">
                    </div>
                </div>
            </div>
            <div class="row table-main">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div id="cntListaMovCaja" class="table-responsive">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-lg-4 col-lg-offset-4">
    <div id="target2" class="panel move panel-inverse" data-sortable-id="form-stuff-1" style="display: none;">
        <div class="panel-heading">
            <h4 class="panel-title">Entrega de Efectivo</h4>
        </div>
        <div class="panel-body" style="display: block;">
            <div id="msgEntEfe">
            </div>
            <form role="form" id="frmEntradaEfectivo" data-toggle="validator" class="form-horizontal ng-pristine ng-valid" autocomplete="off">
                <div class="form-group">
                    <label class="col-md-7 control-label">Escriba el dinero a ingresar en caja</label>
                    <div class="col-md-5">
                        <div class="input-group">
                            <span class="input-group-addon">S/.</span>
                            <input type="text" id="txtMonEnt" name="" onkeypress="return val_09D(event)" class="form-control" placeholder="0.00" required>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="text-center">
                        <input type="button" id="btnEntAceptar" class="btn btn-sm btn-primary m-r-5" value="Aceptar" />
                        <input type="button" id="btnEntCancelar" data-dismiss="modal" aria-hidden="true" class="btn btn-sm btn-default" value="Cancelar" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="col-lg-4 col-lg-offset-4">
    <div id="target3" class="panel move panel-inverse" data-sortable-id="form-stuff-1" style="display: none;">
        <div class="panel-heading">
            <h4 class="panel-title">Salida de Efectivo</h4>
        </div>
        <div class="panel-body" style="display: block;">
            <div id="msgSalEfe">
            </div>
            <div class="form-horizontal ng-pristine ng-valid" >
                <form role="form" id="frmSalidaEfectivo" data-toggle="validator"  class="form-group m-b-5" autocomplete="off">
                    <label class="col-md-7 control-label">Escriba el dinero de salida de caja</label>
                    <div class="col-md-5">
                        <div class="input-group">
                            <span class="input-group-addon">S/.</span>
                            <input type="text" id="txtMonSalida" name="" class="form-control" onkeypress="return val_09D(event)"  placeholder="0.00" required>
                        </div>
                    </div>
                </form>
                <div class="form-group">

                    <div id="tpoSalida" class="col-md-12 text-center">
                        <label class="radio-inline m-r-20">
                            <input type="radio" value="1" name="tpoSalida" hre="#frmProveedor" checked>Pago Proveedor</label>
                        <label class="radio-inline">
                            <input type="radio" value="2" name="tpoSalida" hre="#frmOtros">Otros</label>
                    </div>
                </div>
                <div>
                    <form role="form" id="frmProveedor" data-toggle="validator" autocomplete="off">
                        <div class="form-group m-b-5">
                            <label class="col-md-4 control-label">Proveedor</label>
                            <div class="col-md-8 form-inline">
                                <input id="hdnProvId" type="hidden" name="">
                                <input type="text" id="txtBuscarProveedor" name="" class="form-control" placeholder="">
                                <button id="btnBuscarPro" type="button" class="btn btn-sm btn-default" data-toggle="modal">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </div>
                        </div>
                        <div class="form-group m-b-5">
                            <label class="col-md-4 control-label">Nombre</label>
                            <div class="col-md-7">
                                <input type="text" id="txtNombreProv" name="" class="form-control" readonly="" required>
                            </div>
                        </div>
                        <div class="form-group m-b-5">
                            <label class="col-md-4 control-label">RUC</label>
                            <div class="col-md-7">
                                <input type="text" id="txtRucProv" name="" class="form-control" readonly="" required>
                            </div>
                        </div>
                        <div class="form-group m-b-5">
                            <label class="col-md-4 control-label">N° Comprobante</label>
                            <div class="col-md-7">
                                <input type="text" id="txtNroComp" name="" class="form-control" required>
                            </div>
                        </div>
                        <div class="form-group m-b-5">
                            <label class="col-md-4 control-label">Tipo Comprobante</label>
                            <div class="col-md-7">
                                <select name="status" id="cmbTipoComp" class="form-control manito" required>
                                </select>
                            </div>
                        </div>
                        <div class="form-group ">
                            <label class="col-md-4 control-label">Fecha de Emisión</label>
                            <div class="col-md-7">
                                <input type="text" id="txtFechaEmi" name="" class="form-control" placeholder="" required>
                            </div>
                        </div>
                    </form>
                    <form id="frmOtros" role="form" style="display: none;" data-toggle="validator" autocomplete="off">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Motivo o Razón</label>
                            <div class="col-md-7">
                                <input type="text" id="txtMotOtro" name="" class="form-control">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="row">
                    <div class="text-center">
                        <input type="button" id="btnSalAceptar" class="btn btn-sm btn-primary m-r-5" value="Aceptar" />
                        <input type="button" id="btnSalCancelar" data-dismiss="modal" aria-hidden="true" class="btn btn-sm btn-default" value="Cancelar" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-lg-4 col-lg-offset-4">
    <div id="target4" class="panel move panel-inverse" data-sortable-id="form-stuff-1" style="display: none;">
        <div class="panel-heading">
            <h4 class="panel-title">Apertura de Caja</h4>
        </div>
        <div class="panel-body" style="display: block;">
            <div id="msgApeCaja">
            </div>
            <form id="frmAperturaCaja" data-toggle="validator" class="form-horizontal ng-pristine ng-valid" autocomplete="off">
                <div id="cntApertura">
                    @if (@ViewBag.bEstado != true)
                    {
                        <div class="form-group m-b-5">
                            <label class="col-md-4 control-label">Fecha</label>
                            <div class="col-md-7">
                                <input type="text" id="txtFechaApe" name="" class="form-control" readonly="readonly">
                            </div>
                        </div>
                    }
                    <div class="form-group m-b-5">
                        <label class="col-md-4 control-label">Usuario Cajero</label>
                        <div class="col-md-7">
                            <select name="status" id="cmbUsuCaj" class="form-control manito" required>
                            </select>
                        </div>
                    </div>
                    <div class="form-group m-b-5">
                        <label class="col-md-4 control-label">Efectivo Inicio</label>
                        <div class="col-md-7">
                            <input type="text" id="txtEfeIni" name="" class="form-control" onkeypress="return val_09D(event)" placeholder="0.00" required>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="text-center">
                        @if (@ViewBag.bEstado == true)
                        {
                            <input type="button" id="btnReAsig" class="btn btn-sm btn-primary m-r-5" value="Realizar Asignación" />
                        }
                        else
                        {
                            <input type="button" id="btnReApe" class="btn btn-sm btn-primary m-r-5" value="Realizar Apertura" />
                        }
                        <input type="button" id="btnCaApe" data-dismiss="modal" aria-hidden="true" class="btn btn-sm btn-default" value="Cancelar" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>



<script type="text/javascript">

    jQuery(function ($) {
        $('#txtFechaEmi,#txtFechaApe').datetimepicker({
            locale: 'es', format: 'DD/MM/YYYY'
        });

        $('input.target').click(function () {
            vista($(this).attr('href'));
        });
    });

    var vista = function ($target) {
        var $target = $($target),
            $other = $('.active');

        if (!$target.hasClass('active')) {
            $other.each(function (index, self) {
                var $this = $(this);
                $this.removeClass('active').animate({
                    left: $this.width()
                }, 500).hide();
            });

            $target.addClass('active').show().css({
                left: -($target.width())
            }).animate({
                left: 0
            }, 500);
        }
    };


    $("#tpoSalida input:radio").click(function () {
        var $target = $($(this).attr('hre')),
            $other = $target.siblings();

        $target.show();
        $other.hide();

        $("#frmProveedor,#frmOtros").validator('destroy');
    });


    $("#btnBuscarPro").bind("click", function () {
        BuscarProv($("#txtBuscarProveedor").val());
    });

    $("#txtBuscarProveedor").bind("keyup", function (e) {
        if (e.which == 13) { BuscarProv($(this).val()); };
    });

    var provSelec = {}

    function BuscarProv(valor) {
        var aceptar = function (d) {
            provSelec = d;
            $("#hdnProvId").val(d.id);
            $("#txtNombreProv").val(d.nom);
            $("#txtRucProv").val(d.doi);
            $('#vntBuscaProveedor').modal('hide');
        };

        var cancelar = function () {
            //$("#btnCancelar").click();
        }
        $.fn.BuscarProveedor({
            funcionAceptar: aceptar,
            funcionCancelar: cancelar,
            valor: valor
        });
    }

    $("#btnSalAceptar").bind("click", function () {
        var form = $("#frmSalidaEfectivo");

        form.validator();

        var validator = form.data("bs.validator");
        validator.validate();

        if (!validator.hasErrors()) {

            if ($("#tpoSalida input:checked").val() == 1) {
                GrabarPagoProveedor();
            } else {
                GrabarSalidaEfec();
            }
        } else {
            alerta("#msgSalEfe", "Es necesario ingresar el monto de salida.");
        }
    });

    function GrabarPagoProveedor() {
        var form = $("#frmProveedor");

        form.validator();

        var validator = form.data("bs.validator");
        validator.validate();

        if (!validator.hasErrors()) {

            var nPersId = $("#hdnProvId").val();
            var cComprobante = $("#txtNroComp").val();
            var nMontoSalida = $("#txtMonSalida").val();
            var nTipoComp = $("#cmbTipoComp").val();
            var dFechaEmi = $("#txtFechaEmi").val();

            $.fn.Conexion({
                direccion: "/Caja/RegistrarSalidaEfePagoProv",
                datos: { "nPersId": nPersId, "cComprobante": cComprobante, "nMontoSalida": nMontoSalida, "nTipoComp": nTipoComp, "dFechaEmi": dFechaEmi },
                terminado: function (data, textStatus, jqXHR) {
                    Resultado(data);
                },
                bloqueo: true
            });
        }else {
            alerta("#msgSalEfe", "Es necesario completar los campos que están en rojo.");
        }
    }

    function GrabarSalidaEfec() {
        var form = $("#frmOtros");

        form.validator();

        var validator = form.data("bs.validator");
        validator.validate();

        if (!validator.hasErrors()) {

            var nMontoSalida = $("#txtMonSalida").val();
            var cMotOtro = $("#txtMotOtro").val();

            $.fn.Conexion({
                direccion: "/Caja/RegistrarSalidaEfe",
                datos: { "nMontoSalida": nMontoSalida, "cMotOtro": cMotOtro },
                terminado: function (data, textStatus, jqXHR) {
                    Resultado(data);
                },
                bloqueo: true
            });
        }else {
            alerta("#msgSalEfe", "Es necesario completar los campos que están en rojo.");
        }
    }

    function Resultado(dato) {
        if (dato > 0) {
            $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Se registró la salida de efectivo correctamente.", funcionAceptar: Aceptar });
        } else if(dato == -1) {
            $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Usted no tiene ninguna caja aperturada." });
        } else if (dato == -2) {
            $.fn.Mensaje({ titulo: "Mensaje", mensaje: "La operación no se realizó correctamente" });
        }
    }

    $("#btnEntAceptar").bind("click", function () {
        GrabarEntradaEfec();
    });

    function GrabarEntradaEfec() {
        var form = $("#frmEntradaEfectivo");

        form.validator();

        var validator = form.data("bs.validator");
        validator.validate();

        if (!validator.hasErrors()) {

            var nMontoEntrada = $("#txtMonEnt").val();

            $.fn.Conexion({
                direccion: "/Caja/RegistrarEntradaEfe",
                datos: { "nMontoEntrada": nMontoEntrada },
                terminado: function (data, textStatus, jqXHR) {
                    ResultadoE(data);
                },
                bloqueo: true
            });
        } else {
            alerta("#msgEntEfe", "Ingrese el monto del efectivo.");
        }
    }

        function Aceptar() {
            Limpiar();
            ListarMovCaja();
        }

        $("#btnCaApe,#btnSalCancelar,#btnEntCancelar").bind("click", function () {
            Limpiar();
        });

        function Limpiar() {
            $('form').each(function () { this.reset() });
            $("#frmAperturaCaja,#frmEntradaEfectivo,#frmProveedor,#frmSalidaEfectivo,#frmOtros").validator('destroy');
            $("#msgSalEfe,#msgEntEfe,#msgApeCaja").html("");
            $("#hdnProvId,#hdnEstado").val("");
            vista("#target1");
        }

        function ResultadoE(dato) {
            if (dato > 0) {
                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Se registró el ingreso de efectivo correctamente.", funcionAceptar: Aceptar });
            } else if (dato == -1) {
                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Usted no tiene ninguna caja aperturada." });
            } else if (dato == -2){
                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "La operación no se realizó correctamente." });
            }
        }



        ListarMovCaja();

        function ListarMovCaja() {

            var cMovDesc;
            var cMovDesc = $("#txtValor").val();
            cMovDesc = cMovDesc == "" ? null : cMovDesc;

            $.fn.Conexion({
                direccion: '/Caja/BuscarMovCaja',
                datos: { "cMovDesc": cMovDesc },
                terminado: function (data) {

                    $("#cntListaMovCaja").Tabla({
                        tblId: "tblMovCaja",
                        cabecera: "Fecha,Descripción,Entrada,Salida, En Caja",
                        campos: "dMovFec,cOpeDesc,cMonIng,cMonEgr,cMonActl",
                        scrollVertical: "Si",
                        tipoCampo: "F,,,,",
                        alinear: "L,L,L,L,L",
                        cellLen: "150,464,130,130,130",
                        cantRegVertical: 8,
                        datos: JSON.parse(data)
                    });
                }
            });
        }



        ListaConst();

        function ListaConst() {
            $.fn.Conexion({
                direccion: '/Caja/ListaConstantes',
                terminado: function (data) {
                    var cons = JSON.parse(data);

                    comboTipoCred = new hCombos();
                    comboTipoCred.ids = ['cmbUsuCaj'];
                    comboTipoCred.pre = [''];
                    comboTipoCred.info = cons.lstUsuarios;
                    comboTipoCred.init();

                    comboTipoCred = new hCombos();
                    comboTipoCred.ids = ['cmbTipoComp'];
                    comboTipoCred.pre = [''];
                    comboTipoCred.info = cons.lstTpoCom;
                    comboTipoCred.init();
                }
            });
        }


        $("#btnBuscarMov").bind("click", function () {
            ListarMovCaja();
        });

        $("#btnCierreCaja").bind("click", function () {
            $("#contenido").load("/Caja/CierreCaja");
        });


        //Apertura de Caja

        $("#btnApertura").bind("click", function () {
            $('#txtFechaApe').val(moment().format("DD/MM/YYYY hh:mm A"));
            UltimoSaldoCaja();
        });

        function UltimoSaldoCaja(){
            $.fn.Conexion({
                direccion: "/Caja/ObtenerUltimoSaldoCaja",
                terminado: function (data, textStatus, jqXHR) {
                    $("#txtEfeIni").val(number_format(data, 2));
                },
                bloqueo: true
            });
        }


        $("#btnReApe").bind("click", function () {
            GrabarAperturaCaja();
        });

            function GrabarAperturaCaja() {

                var cUsuOpe = $("#cmbUsuCaj").val();
                var nMontoIni = $("#txtEfeIni").val();
                var dFechaApe = $("#txtFechaApe").val();

                $.fn.Conexion({
                    direccion: "/Caja/RegistrarAperturaCaja",
                    datos: { "cUsuOpe": cUsuOpe, "nMontoIni": nMontoIni, "dFechaApe": dFechaApe },
                    terminado: function (data, textStatus, jqXHR) {
                        if (data >= 1) {
                            $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Se realizó la apertura de Caja del día correctamente. Solicite al usuario indicado la confirmación del monto asignado." });
                        } else if (data == -1) {
                            $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Es necesario realizar el Cierre del día para aperturar una nueva Caja del día." });
                        } else if (data == -2) {
                            $.fn.Mensaje({ titulo: "Mensaje", mensaje: "La operación no se realizó correctamente." });
                        }
                    },
                    bloqueo: true
                });
            }

            $("#btnReAsig").bind("click", function () {
                GrabarAsigMonto();
            });

            function GrabarAsigMonto() {
                var form = $("#frmAperturaCaja");
                form.validator();

                var validator = form.data("bs.validator");
                validator.validate();

                if (!validator.hasErrors()) {

                    var cUsuOpe = $("#cmbUsuCaj").val();
                    var nMontoAsig = $("#txtEfeIni").val();

                    $.fn.Conexion({
                        direccion: "/Caja/RegistrarAsigMonto",
                        datos: { "cUsuOpe": cUsuOpe, "nMontoAsig": nMontoAsig },
                        terminado: function (data, textStatus, jqXHR) {
                            if (data >= 1) {
                                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Se realizó la asignación del monto correctamente. Solicite al usuario indicado la confirmación del monto asignado." });
                            } else if (data == -1) {
                                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "La asignación se debe realizar por el usuario que aperturo inicio de caja." });
                            } else if (data == -2) {
                                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "No se puede realizar asignación. Existe un usuario con caja sin cerrar." });
                            } else if (data == -3) {
                                $.fn.Mensaje({ titulo: "Mensaje", mensaje: "La operación no se realizó correctamente." });
                            }
                        },
                        bloqueo: true
                    });
                } else {
                    alerta("#msgApeCaja", "Es necesario completar los campos que están en rojo.");
                }
            }

            //End - Apertura de Caja

</script>
